{"version":3,"sources":["Components/Error/star-error.jpeg","Components/Header/Header.jsx","Components/Spiner/Spiner.jsx","Components/Error/ErrorIndicator.jsx","Services/services.js","Components/RandomPlanet/RandomPlanet.jsx","Components/ItemList/ItemList.jsx","Components/PersonDetails/PersonDetails.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","Spiner","ErrorIndicator","src","icon","alt","SwapiService","_apiBase","_transformPlanet","planet","id","_this","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarShip","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","eyeColor","url","fetch","concat","this","res","ok","Error","status","json","getResurse","results","map","item","match","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","getPlanet","then","catch","interval","setInterval","_this$state","spinner","Components_Spiner_Spiner","content","RandomPlanet_PlanetView","errorMessage","Components_Error_ErrorIndicator","Component","PlanetView","_ref","Fragment","ItemList","peopleList","_this2","getAllPeople","arr","_this3","key","onClick","props","onItemSelected","renderItems","PersonDetails","App","selectedPerson","onPersonSelected","Components_Header_Header","RandomPlanet_RandomPlanet_RandomPlanet","ItemList_ItemList","PersonDetails_PersonDetails_PersonDetails","personId","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f98d7b13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-error.c29184be.jpeg\";","import React from 'react';\n\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <a href=\"#\">\n          Star DB\n        </a>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <a href=\"#\">People</a>\n        </li>\n        <li>\n          <a href=\"#\">Planets</a>\n        </li>\n        <li>\n          <a href=\"#\">Starships</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nimport './Spiner.css';\n\nconst Spiner = () => {\n  return (\n  <div className=\"lds-css ng-scope\">\n    <div  className=\"lds-double-ring\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n  )\n}\n\nexport default Spiner;\n","import React from 'react';\nimport './ErrorIndicator.css';\nimport icon from './star-error.jpeg';\n\nconst  ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n     <img src={icon} alt=\"\"/>\n      <span className=\"boom\">BOOM! </span>\n      <span> Something has gone terribly wrong</span>\n      <span> (but we already sent droids to fix it)</span>\n    </div>\n  )\n};\n\nexport default ErrorIndicator;","export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  async getResurse(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error (`Could not fetch ${this._apiBase}${url}, is status ${res.status}`)\n    }\n    return await res.json();\n  }\n  \n  async getAllPeople() {\n    const res = await this.getResurse(`/people/`);\n    return res.results.map(this._transformPerson);\n  }\n\n  async getAPerson(id) {\n    const person = await this.getResurse(`/people/${id}/`);\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResurse(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResurse(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarShips() {\n    const res = await this.getResurse(`/starships/`);\n    return res.results.map(this._transformStarShip);\n  }\n  \n  async getStarShip(id) {\n    const starship = await this.getResurse(`/starships/${id}`);\n    return this._transformStarShip(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet = (planet) => {\n    const id = this._extractId(planet); \n    return {\n      id,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformStarShip = (starship) =>  {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    }\n  }\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birthYear,\n      eyeColor: person.eyeColor\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Spiner from '../Spiner/Spiner';\nimport ErrorIndicator from '../Error/ErrorIndicator';\nimport SwapiService from '../../Services/services';\n\nimport './RandomPlanet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 3000);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({ \n      planet,\n      loading: false\n    });\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 20) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    \n    const { planet, loading, error } = this.state;\n\n    const spinner = loading ? <Spiner /> : null;\n    const content = !loading && !error ? <PlanetView planet={planet} /> : null;\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        { spinner }\n        { content }\n        { errorMessage }\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ( { planet }) => {\n      \n  const { id, name, population, rotationPeriod, diameter } = planet;\n\n  return (\n    <>\n      <img className=\"planet-image\"\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>1{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { Component } from 'react';\n\nimport './ItemLIst.css';\nimport SwapiService from '../../Services/services';\nimport Spiner from '../Spiner/Spiner';\n\nexport default class ItemList extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    peopleList: null\n  }\n\n  componentDidMount() {\n\n    this.swapiService\n      .getAllPeople()\n      .then((peopleList) => {\n        this.setState( { peopleList })\n      });\n  }\n\n  renderItems(arr) {\n    return arr.map(({ id, name }) => {\n      return(\n        <li \n          className=\"list-group-item\"\n          key={id}\n          onClick={() => this.props.onItemSelected(id)}>\n          {name}\n        </li>\n      )\n    })\n  }\n\n  render() {\n\n    const { peopleList } = this.state;\n\n    if (!peopleList) {\n      return <Spiner />\n    }\n\n    const item = this.renderItems(peopleList);\n    \n    return (\n      <ul className=\"item-list list-group\">\n        {item}\n      </ul>\n    );\n  }\n}","import React, { Component } from 'react';\n\nimport './PersonDetails.css';\n\nexport default class PersonDetails extends Component {\n\n  render() {\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\"\n          src=\"https://starwars-visualguide.com/assets/img/characters/3.jpg\" />\n\n        <div className=\"card-body\">\n          <h4>R2-D2</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender</span>\n              <span>male</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Birth Year</span>\n              <span>43</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye Color</span>\n              <span>red</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport RandomPlanet from '../RandomPlanet//RandomPlanet';\nimport ItemList from '../ItemList/ItemList';\nimport PersoneDetails from '../PersonDetails/PersonDetails';\n\nimport './App';\n\nexport default class App extends Component {\n  \n  state = {\n    selectedPerson: null\n  }\n\n  onPersonSelected = (id) => {\n    this.setState({\n      selectedPerson: id\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <RandomPlanet />\n        <div className=\"row mb2\">\n          <div className=\"col-md-6\">\n            <ItemList onItemSelected={this.onPersonSelected}/>\n          </div>\n          <div className=\"col-md-6\">\n            <PersoneDetails personId={this.state.selectedPerson} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}