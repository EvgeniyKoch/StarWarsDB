{"version":3,"sources":["Components/Error/star-error.jpeg","Components/Header/Header.jsx","Components/Spiner/Spiner.jsx","Components/Error/ErrorIndicator.jsx","Services/services.js","Components/RandomPlanet/RandomPlanet.jsx","Components/ItemList/ItemList.jsx","Components/ItemDetails/ItemDetails.jsx","Components/ErrorBoundry/ErrorBoundry.jsx","Components/Row/Row.jsx","Components/PeoplePage/PeoplePage.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","Spiner","ErrorIndicator","src","icon","alt","SwapiService","_apiBase","getResurse","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","concat","_this","sent","ok","Error","status","json","abrupt","stop","this","getAllPeople","_callee2","_context2","results","map","_transformPerson","getPerson","_callee3","id","person","_context3","getAllPlanets","_callee4","_context4","_transformPlanet","getPlanet","_callee5","planet","_context5","getAllStarShips","_callee6","_context6","_transformStarShip","getStarShip","_callee7","starship","_context7","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","height","mass","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","interval","setInterval","_this$state","spinner","Components_Spiner_Spiner","content","RandomPlanet_PlanetView","errorMessage","Components_Error_ErrorIndicator","Component","PlanetView","_ref","Fragment","ItemList","itemList","_this2","getData","props","arr","_this3","label","children","key","onClick","onItemSelected","renderItems","ItemDetails","updateItem","prevProps","itemId","style","color","fontSize","textAlign","ItemDetails_PersonItem","PersonItem","ErrorBoundary","hasError","Row","left","right","PeoplePage","selectedPerson","onPersonSelected","ErrorBoundry_ErrorBoundary","ItemList_ItemList","i","itemDetails","ItemDetails_ItemDetails_ItemDetails","Components_Row_Row","App","Components_Header_Header","RandomPlanet_RandomPlanet_RandomPlanet","PeoplePage_PeoplePage_PeoplePage","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.052a7ca1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-error.c29184be.jpeg\";","import React from 'react';\n\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <a href=\"#\">\n          Star DB\n        </a>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <a href=\"#\">People</a>\n        </li>\n        <li>\n          <a href=\"#\">Planets</a>\n        </li>\n        <li>\n          <a href=\"#\">Starships</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nimport './Spiner.css';\n\nconst Spiner = () => {\n  return (\n  <div className=\"lds-css ng-scope\">\n    <div  className=\"lds-double-ring\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n  )\n}\n\nexport default Spiner;\n","import React from 'react';\nimport './ErrorIndicator.css';\nimport icon from './star-error.jpeg';\n\nconst  ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n     <img src={icon} alt=\"\"/>\n      <span className=\"boom\">BOOM! </span>\n      <span> Something has gone terribly wrong</span>\n      <span> (but we already sent droids to fix it)</span>\n    </div>\n  )\n};\n\nexport default ErrorIndicator;","export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  getResurse = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error (`Could not fetch ${this._apiBase}${url}, is status ${res.status}`)\n    }\n    return await res.json();\n  };\n  \n  getAllPeople = async () => {\n    const res = await this.getResurse(`/people/`);\n    return res.results.map(this._transformPerson);\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResurse(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResurse(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResurse(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarShips = async () => {\n    const res = await this.getResurse(`/starships/`);\n    return res.results.map(this._transformStarShip);\n  };\n  \n  getStarShip = async (id) => {\n    const starship = await this.getResurse(`/starships/${id}`);\n    return this._transformStarShip(starship);\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet = (planet) => {\n    const id = this._extractId(planet); \n    return {\n      id,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformStarShip = (starship) =>  {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    }\n  }\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color,\n      height: person.height,\n      mass: person.mass\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Spiner from '../Spiner/Spiner';\nimport ErrorIndicator from '../Error/ErrorIndicator';\nimport SwapiService from '../../Services/services';\n\nimport './RandomPlanet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 3000);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({ \n      planet,\n      loading: false\n    });\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 20) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    \n    const { planet, loading, error } = this.state;\n\n    const spinner = loading ? <Spiner /> : null;\n    const content = !loading && !error ? <PlanetView planet={planet} /> : null;\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    \n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        { spinner }\n        { content }\n        { errorMessage }\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ( { planet }) => {\n      \n  const { id, name, population, rotationPeriod, diameter } = planet;\n\n  return (\n    <>\n      <img className=\"planet-image\"\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population:</span>\n            <span>1{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period:</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter:</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { Component } from 'react';\nimport './ItemLIst.css';\nimport Spiner from '../Spiner/Spiner';\n\nexport default class ItemList extends Component {\n\n  state = {\n    itemList: null\n  }\n\n  componentDidMount() {\n    const { getData } = this.props;\n      getData()\n      .then((itemList) => {\n        this.setState( { itemList })\n      });\n  }\n\n  renderItems(arr) {\n    return arr.map((item) => {\n      const { id } = item;\n      const label = this.props.children(item);\n      return (\n        <li\n          className=\"list-group-item\"\n          key={id}\n          onClick={() => this.props.onItemSelected(id)}>\n          {label}\n        </li>\n      )\n    });\n  }\n\n  render() {\n\n    const { itemList } = this.state;\n    if (!itemList) {\n      return <Spiner />\n    }\n\n    const item = this.renderItems(itemList);\n    return (\n      <ul className=\"item-list list-group\">\n        {item}\n      </ul>\n    );\n  }\n}","import React, { Component } from 'react';\nimport SwapiService from '../../Services/services';\nimport Spiner from '../Spiner/Spiner';\n\nimport './ItemDetails.css';\n\nexport default class ItemDetails extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    item: null,\n    loading: true\n  }\n  \n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId } = this.props;\n  \n    if (!itemId) {\n      return;\n    }\n\n    this.swapiService\n      .getPerson(itemId)\n      .then((item) => {\n        this.setState({ \n          item,\n          loading: false \n      })\n      })\n  }\n\n  render() {\n\n    if (!this.state.item) {\n      return <p style={\n          {\n            color:'coral',\n            fontSize: '28px',\n            textAlign: 'center'\n          }\n        }>Select a person from a list!</p>\n    }\n\n    const { item, loading } = this.state;\n    const spinner = loading ? <Spiner /> : null;\n    const content = !loading ? < PersonItem item={item} /> : null;\n\n    return (\n      <div className=\"person-details card\">\n        {spinner}\n        {content}\n      </div>\n    )\n  }\n}\n\nconst PersonItem = ({ item }) => {\n  const { id, name, gender, birthYear, \n          eyeColor, height, mass } = item;\n\n  return (\n    <>\n      <img className=\"person-image\"\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} />\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender:</span>\n              <span>{gender}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Birth Year:</span>\n              <span>{birthYear}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye Color:</span>\n              <span>{eyeColor}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Height:</span>\n              <span>{height}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Mass:</span>\n              <span>{mass}</span>\n            </li>\n          </ul>\n        </div>\n    </>\n  )\n}\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../Error/ErrorIndicator';\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    })\n  }\n  \n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n    return this.props.children;\n  }\n}\n","import React from 'react';\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className=\"row mb2\">\n       <div className=\"col-md-6\">\n        {left}\n       </div>\n       <div className=\"col-md-6\">\n          {right}\n       </div>\n     </div>\n );\n};\n\nexport default Row;","import React, { Component } from 'react';\nimport ItemList from '../ItemList/ItemList';\nimport ItemDetails from '../ItemDetails/ItemDetails';\nimport ErrorBoundary from '../ErrorBoundry/ErrorBoundry';\nimport Row from '../Row/Row';\nimport SwapiService from '../../Services/services';\nimport './PeoplePage.css';\n\n\nexport default class PeoplePage extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    selectedPerson: null  \n  }\n\n  onPersonSelected = (selectedPerson) => {\n    this.setState({ selectedPerson });\n  }\n\n  render() {\n\n    const itemList = (\n      <ErrorBoundary>\n        <ItemList \n          onItemSelected={this.onPersonSelected}\n          getData={this.swapiService.getAllPeople}>\n\n          {(i) => (\n            `${i.name} (${i.birthYear})`\n          )}\n\n        </ItemList>\n      </ErrorBoundary>\n    );\n\n    const itemDetails = (\n      <ErrorBoundary>\n        <ItemDetails itemId={this.state.selectedPerson} />\n      </ErrorBoundary>\n    );\n\n    return (\n       <Row left={itemList} right={itemDetails} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport RandomPlanet from '../RandomPlanet//RandomPlanet';\nimport PeoplePage from '../PeoplePage/PeoplePage';\nimport ErrorBoundry from '../ErrorBoundry/ErrorBoundry';\nimport SwapiService from '../../Services/services';\nimport ItemList from '../ItemList/ItemList';\nimport ItemDetails from '../ItemDetails/ItemDetails';\nimport './App';\n\n\nexport default class App extends Component {\n\n  swapiService = new SwapiService();\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <RandomPlanet />\n        <PeoplePage />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}