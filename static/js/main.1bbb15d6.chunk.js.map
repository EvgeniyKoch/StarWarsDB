{"version":3,"sources":["Components/Error/star-error.jpeg","Components/Header/index.js","Components/Header/Header.jsx","Components/Spiner/index.js","Components/Spiner/Spiner.jsx","Components/Error/index.js","Components/Error/ErrorIndicator.jsx","Services/services.js","Services/index.js","Components/RandomPlanet/RandomPlanet.jsx","Components/RandomPlanet/index.js","Components/ErrorBoundry/index.js","Components/ErrorBoundry/ErrorBoundry.jsx","Components/ItemDetails/ItemDetails.jsx","Components/SwapiServiceContex/SwapiServiceContex.jsx","Components/hoc-helpers/with-swapi-service.js","Components/SwComponent/PersonDetails.jsx","Components/SwComponent/StarshipDetails.jsx","Components/SwComponent/PlanetDetails.jsx","Components/ItemList/ItemList.jsx","Components/ItemList/index.js","Components/hoc-helpers/withData.js","Components/hoc-helpers/with-children-function.js","Components/hoc-helpers/compose.js","Components/SwComponent/ItemsList.jsx","Components/Row/index.js","Components/Row/Row.jsx","Components/Pages/PeoplePage.jsx","Components/Pages/PlanetsPage.jsx","Components/Pages/StarshipsPage.jsx","Components/Pages/LoginPage.jsx","Components/Pages/SecretPage.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","Spiner","ErrorIndicator","src","icon","alt","SwapiService","_apiBase","_apiImage","getResurse","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","concat","_this","sent","ok","Error","status","json","abrupt","stop","this","getAllPeople","_callee2","_context2","results","map","_transformPerson","getPerson","_callee3","id","person","_context3","getAllPlanets","_callee4","_context4","_transformPlanet","getPlanet","_callee5","planet","_context5","getAllStarShips","_callee6","_context6","_transformStarShip","getStarShip","_callee7","starship","_context7","getPersonImage","_ref8","getStarshipImage","_ref9","getPlanetImage","_ref10","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","height","mass","services","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","props","interval","setInterval","_this$state","spinner","Components_Spiner","content","RandomPlanet_PlanetView","errorMessage","Components_Error","Component","defaultProps","PlanetView","_ref","Fragment","ErrorBoundry","hasError","children","Record","field","label","ItemDetails","image","updateItem","prevProps","itemId","_this2","_this$props","getData","getImageUrl","style","color","fontSize","textAlign","React","Children","child","cloneElement","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","serviceProps","Object","assign","ItemDetails_ItemDetails_ItemDetails","ItemDetails_Record","ItemList","data","onItemSelected","renderLabel","items","key","onClick","withData","View","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","value","update","withChildrenFunction","func","compose","funcs","comp","reduceRight","prevResult","f","renderName","PersonList","swapiSercice","PlanetList","StarshipList","_ref2","Row","left","right","withRouter","history","params","Components_Row","push","SwComponent_PersonDetails","PlanetsPage","selectedItem","SwComponent_PlanetDetails","LoginPage","isLoggedIn","onLogin","react_router","SecretPage","App","Components_Header","Components_RandomPlanet","path","exact","render","component","PeoplePage","StarshipsPage","SwComponent_StarshipDetails","Pages_LoginPage","Pages_SecretPage","ReactDOM","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1bbb15d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-error.c29184be.jpeg\";","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <Link to=\"/\">Star DB</Link>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <Link to=\"/people/\">People</Link>\n        </li>\n        <li>\n          <Link to=\"/planets/\">Planets</Link>\n        </li>\n        <li>\n          <Link to=\"/starships/\">Starships</Link>\n        </li>\n         <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n         <li>\n          <Link to=\"/secret\">Secret </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;","import Spiner from './Spiner';\n\nexport default Spiner;\n","import React from 'react';\n\nimport './Spiner.css';\n\nconst Spiner = () => {\n  return (\n  <div className=\"lds-css ng-scope\">\n    <div  className=\"lds-double-ring\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n  )\n}\n\nexport default Spiner;\n","import ErrorIndicator from './ErrorIndicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './ErrorIndicator.css';\nimport icon from './star-error.jpeg';\n\nconst  ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n     <img src={icon} alt=\"\"/>\n      <span className=\"boom\">BOOM! </span>\n      <span> Something has gone terribly wrong</span>\n      <span> (but we already sent droids to fix it)</span>\n    </div>\n  )\n};\n\nexport default ErrorIndicator;","export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n  _apiImage = 'https://starwars-visualguide.com/assets/img';\n\n  getResurse = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error (`Could not fetch ${this._apiBase}${url}, is status ${res.status}`)\n    }\n    return await res.json();\n  };\n  \n  getAllPeople = async () => {\n    const res = await this.getResurse(`/people/`);\n    return res.results.map(this._transformPerson);\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResurse(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResurse(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResurse(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarShips = async () => {\n    const res = await this.getResurse(`/starships/`);\n    return res.results.map(this._transformStarShip);\n  };\n  \n  getStarShip = async (id) => {\n    const starship = await this.getResurse(`/starships/${id}`);\n    return this._transformStarShip(starship);\n  };\n\n  getPersonImage = ({ id }) => {\n    return `${this._apiImage}/characters/${id}.jpg`;\n  }\n  \n  getStarshipImage = ({ id }) => {\n    return `${this._apiImage}/starships/${id}.jpg`;\n  }\n  \n  getPlanetImage = ({ id }) => {\n    return `${this._apiImage}/planets/${id}.jpg`;\n  }\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet = (planet) => {\n    const id = this._extractId(planet); \n    return {\n      id,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformStarShip = (starship) =>  {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    }\n  }\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color,\n      height: person.height,\n      mass: person.mass\n    }\n  }\n}\n","import services from './services';\n\nexport default services;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spiner from '../Spiner';\nimport ErrorIndicator from '../Error';\nimport SwapiService from '../../Services';\n\nimport './RandomPlanet.css';\n\nexport default class RandomPlanet extends Component {\n  static defaultProps = {\n    updateInterval: 10000,\n  };\n\n  static propTypes = {\n    updateInterval: PropTypes.number\n  }\n\n  swapiService = new SwapiService();\n \n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  }\n \n  componentDidMount() {\n    const { updateInterval } = this.props;\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, updateInterval);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({ \n      planet,\n      loading: false\n    });\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 20) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    const { planet, loading, error } = this.state;\n\n    const spinner = loading ? <Spiner /> : null;\n    const content = !loading && !error ? <PlanetView planet={planet} /> : null;\n    const errorMessage = error ? <ErrorIndicator /> : null;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        { spinner }\n        { content }\n        { errorMessage }\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ( { planet }) => {\n  const { id, name, population, rotationPeriod, diameter } = planet;\n\n  return (\n    <>\n      <img\n        className=\"planet-image\"\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n      />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population:</span>\n            <span>1{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period:</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter:</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </>\n  )\n}\n","import RandomPlanet from './RandomPlanet';\n\nexport default RandomPlanet;\n","import ErrorBoundry from './ErrorBoundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../Error';\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    })\n  }\n  \n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n    return this.props.children;\n  }\n}\n","import React, { Component } from 'react';\n\nimport './ItemDetails.css';\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{item[field]}</span>\n    </li>\n  )\n};\n\nclass ItemDetails extends Component {\n\n  state = {\n    item: null,\n    image: null\n  }\n  \n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n\n    if (!itemId) return;\n\n    getData(itemId)\n      .then((item) => {\n        this.setState({ \n          item,\n          image: getImageUrl(item)\n        })\n      })\n  }\n\n  render() {\n\n    if (!this.state.item) {\n      return <p style={\n          {\n            color:'coral',\n            fontSize: '28px',\n            textAlign: 'center'\n          }\n        }>Select a person from a list!</p>;\n    };\n \n    const { item, image } = this.state;\n    const { name } = item;\n\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\" src={image} alt={item}/>\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            {\n              React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, { item })\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport {\n  Record,\n  ItemDetails,\n};\n","import React from 'react';\n\nconst {\n  Provider: SwapiServiceProvider,\n  Consumer: SwapiServiceConsumer\n} = React.createContext();\n\nexport {\n  SwapiServiceProvider,\n  SwapiServiceConsumer\n};","import React from 'react';\n\nimport { SwapiServiceConsumer } from '../SwapiServiceContex/SwapiServiceContex';\n\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\n  return (props) => {\n    return (\n      <SwapiServiceConsumer>\n      {\n        (swapiService) => {\n          const serviceProps = mapMethodsToProps(swapiService);\n          return (\n            <Wrapped { ...props } { ...serviceProps }/>\n          )\n        }\n      }\n      </SwapiServiceConsumer>\n    )\n  }\n};\n\nexport default withSwapiService;\n","import React from 'react';\n\nimport { ItemDetails, Record } from '../ItemDetails';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\n\nconst PersonDetails = (props) => {\n  return (\n    <ItemDetails { ...props }>  \n      <Record field=\"gender\" label=\"Gender:\"/>\n      <Record field=\"eyeColor\" label=\"Eye Color:\"/>\n      <Record field=\"birthYear\" label=\"Birth Year:\"/>\n      <Record field=\"height\" label=\"Height:\"/>\n      <Record field=\"mass\" label=\"Mass:\"/>\n    </ItemDetails>\n  )\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getPerson,\n    getImageUrl: swapiService.getPersonImage\n  }\n}\n\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);","import React from 'react';\n\nimport { Record, ItemDetails } from '../ItemDetails';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\n\nconst StarshipDetails = (props) => {\n  return (\n    <ItemDetails { ...props }>\n      <Record field=\"model\" label=\"Model:\"/>\n      <Record field=\"manufacturer\" label=\"Manufacturer:\"/>\n      <Record field=\"length\" label=\"Length:\"/>\n      <Record field=\"crew\" label=\"Crew:\"/>\n      <Record field=\"passengers\" label=\"Passengers:\"/>\n    </ItemDetails>\n  )\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getStarShip,\n    getImageUrl: swapiService.getStarshipImage\n  }\n}\n\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);","import React from 'react';\n\nimport { Record, ItemDetails } from '../ItemDetails';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\n\nconst PlanetDetails = (props) => {\n  return (\n      <ItemDetails { ...props }>\n        <Record field=\"population\" label=\"Population:\"/>\n        <Record field=\"rotationPeriod\" label=\"RotationPeriod:\"/>\n        <Record field=\"diameter\" label=\"Diameter:\"/>\n      </ItemDetails>\n    );\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getPlanet,\n    getImageUrl: swapiService.getPlanetImage,\n  };\n}\n\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemLIst.css';\n\nconst ItemList = (props) => {\n  const { data, onItemSelected, children: renderLabel } = props;\n\n  const items = data.map((item) => {\n    const { id } = item;\n    const label = renderLabel(item);\n    return (\n      <li\n        className=\"list-group-item\"\n        key={id}\n        onClick={() => onItemSelected(id)}>\n        {label}\n      </li>\n    );\n  });\n  \n  return (\n    <ul className=\"item-list list-group\">\n      {items}\n    </ul>\n  );\n}\n\nItemList.defaultProps = {\n  onItemSelected: () => {}\n};\n\nItemList.propTypes = {\n  onItemSelected: PropTypes.func,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default ItemList;\n","import ItemList from './ItemList';\n\nexport default ItemList;\n","import React, { Component } from 'react';\n\nimport Spiner from '../Spiner';\nimport ErrorIndicator from '../Error';\n\nconst withData = (View) => {\n  return class extends Component {\n    state = {\n      data: null,\n      loading: true,\n      error: false,\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.getData !== prevProps.getData) {\n        this.update();\n      }\n    }\n\n    componentDidMount() {\n      this.update();\n    }\n\n    update() {\n      this.setState({\n        loading: true,\n        error: false,\n      });\n  \n      this.props.getData()\n        .then((data) => {\n          this.setState({\n            data,\n            loading: false,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            error: true,\n            loading: false,\n          });\n        });\n    }\n\n    render() {\n      const { data, loading, error } = this.state;  \n      if (loading) {\n        return <Spiner />;\n      }\n      if (error) {\n        return <ErrorIndicator />;\n      }\n      return  <View {...this.props} data={data} />;\n    }\n  }\n};\n\nexport default withData;\n","import React from 'react';\n\nconst withChildrenFunction = (func) => (Wrapped) => {\n  return (props) => {\n    return (\n      <Wrapped {...props}>\n        {func}\n      </Wrapped>\n    )\n  };\n};\n\nexport default withChildrenFunction;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (prevResult, f) => f(prevResult), comp);\n};\n\nexport default compose;\n","import React from 'react';\n\nimport ItemList from '../ItemList';\nimport withData from '../hoc-helpers/withData';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\nimport withChildrenFunction from '../hoc-helpers/with-children-function';\nimport compose from '../hoc-helpers/compose';\n\nconst mapPersonMethodsToProps = (swapiSercice) => {\n  return {\n    getData: swapiSercice.getAllPeople\n  }\n};\n\nconst mapStarshipsMethodsToProps = (swapiSercice) => {\n  return {\n    getData: swapiSercice.getAllStarShips\n  }\n};\n\nconst mapPlanetMethodsToProps = (swapiSercice) => {\n  return {\n    getData: swapiSercice.getAllPlanets\n  }\n};\n\nconst renderName = ({ name }) => <span>{name}</span>;\n\nconst renderModelAndName = ({ name, model }) => <span>{name} ({model})}</span>;\n\nconst PersonList = compose(\n                      withSwapiService(mapPersonMethodsToProps),\n                      withData,\n                      withChildrenFunction(renderName)\n                    )(ItemList);\n\nconst PlanetList = compose(\n                      withSwapiService(mapPlanetMethodsToProps),\n                      withData,\n                      withChildrenFunction(renderName)\n                    )(ItemList);\n\nconst StarshipList = compose(\n                        withSwapiService(mapStarshipsMethodsToProps),\n                        withData,\n                        withChildrenFunction(renderModelAndName)\n                      )(ItemList);\n\nexport {\n  PersonList,\n  PlanetList,\n  StarshipList,\n};\n","import Row from './Row';\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className=\"row mb2\">\n       <div className=\"col-md-6\">\n        {left}\n       </div>\n       <div className=\"col-md-6\">\n          {right}\n       </div>\n     </div>\n );\n};\n\nRow.propTypes = {\n  left: PropTypes.node,\n  right: PropTypes.node,\n}\n\nexport default Row;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PersonDetails,PersonList } from '../SwComponent';\nimport Row from '../Row';\n\nconst PeoplePage = ({ history, match }) => {\n  const { id } = match.params;\n  return (\n    <Row\n      left={<PersonList onItemSelected={(id) => history.push(id)} />}\n      right={<PersonDetails itemId={id} />}\n    />\n  ); \n};\n\nexport default withRouter(PeoplePage);\n","import React, { Component } from 'react';\nimport { PlanetDetails, PlanetList } from '../SwComponent';\nimport Row from '../Row';\n\nexport default class PlanetsPage extends Component {\n  state = {\n    selectedItem: null,\n  }\n\n  onItemSelected = (selectedItem) => {\n    this.setState({ selectedItem });\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <Row\n        left={<PlanetList onItemSelected={this.onItemSelected} />}\n        right={<PlanetDetails itemId={selectedItem} />}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StarshipList } from '../SwComponent';\nimport { withRouter } from 'react-router-dom';\n\nconst StarshipsPage = ({ history }) => {\n  return (\n    <StarshipList\n      onItemSelected={(id) => history.push(id)}\n    />\n  );\n};\n\nexport default withRouter(StarshipsPage);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"jumbotron\">\n      <p>Login to see secret page!</p>\n      <button\n        className=\"btn btn-primary\"\n        onClick={onLogin}\n      >\n        Login\n      </button>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SecretPage = ({ isLoggedIn }) => {\n  if (isLoggedIn) {\n    return (\n      <div className=\"jumbotron text-center\">\n        <h3>This page is full of secrets!!!</h3>\n      </div>\n    );\n  }\n  return <Redirect to=\"/login\" /> ;\n};\n\nexport default SecretPage;\n","import React, { Component } from 'react';\n\nimport Header from '../Header';\nimport RandomPlanet from '../RandomPlanet';\nimport ErrorBoundry from '../ErrorBoundry';\nimport SwapiService from '../../Services/services';\n\nimport { PeoplePage, PlanetsPage, StarshipsPage } from '../Pages';\nimport { SwapiServiceProvider } from '../SwapiServiceContex';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nimport './App.css';\nimport { StarshipDetails } from '../SwComponent';\nimport LoginPage from '../Pages/LoginPage';\nimport SecretPage from '../Pages/SecretPage';\n\nexport default class App extends Component {\n  swapiService = new SwapiService();\n\n  state = {\n    isLoggedIn: false,\n  }\n\n  onLogin = () => {\n    this.setState({\n      isLoggedIn: true,\n    })\n  }\n\n  render() {\n    const { isLoggedIn } = this.state;\n\n    return (\n      <ErrorBoundry>\n        <SwapiServiceProvider value={this.swapiService}>\n          <Router>\n            <div className=\"container\">\n              <Header />\n              <RandomPlanet/>\n              <Switch>\n                <Route path=\"/\" exact render={() => <h2>Welcome to StarDB!</h2>} />\n                <Route path=\"/people/:id?\" component={PeoplePage} />\n                <Route path=\"/planets\" component={PlanetsPage} />\n                <Route path=\"/starships\" exact component={StarshipsPage} />\n                <Route\n                  path=\"/starships/:id\"\n                  render={({ match }) => {\n                    const { id } = match.params;\n                    return <StarshipDetails itemId={id} />\n                  }}\n                />\n                <Route\n                  path=\"/login\"\n                  render={() => (\n                    <LoginPage\n                      isLoggedIn={isLoggedIn}\n                      onLogin={this.onLogin}\n                    />\n                  )} \n                />\n                <Route\n                  path=\"/secret\"\n                  render={() => (\n                    <SecretPage\n                      isLoggedIn={isLoggedIn}\n                    />\n                  )}\n                />\n                <Route render={() => <h2>Page not found...</h2>} />\n              </Switch>\n            </div>\n          </Router>\n        </SwapiServiceProvider>\n      </ErrorBoundry>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}